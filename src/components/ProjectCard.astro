---
interface Props {
	title: string;
	description: string;
	image: string;
	tags: string[];
	href: string[];
}

const { title, description, image, tags, href } = Astro.props;
---

<div class="project-card">
	<div class="card-content">
		<img src={image} alt={title} class="project-image" />
		<h3>{title}</h3>
		<p>{description}</p>
		<div class="tags">
			{tags.map(tag => <span class="tag">{tag}</span>)}
		</div>
	</div>
	{href.map(path => (
		<a href={path} download class="download-trigger">{path}</a>
	))}
</div>

<style>
	/* Add this to your existing styles */
	.download-trigger {
		position: absolute;
		opacity: 0;
		pointer-events: none;
	}

	.project-card {
		position: relative;
		cursor: pointer;
	}
</style>


<script>
	// Add this script to make clicks trigger downloads
	document.querySelectorAll('.project-card').forEach(card => {
		card.addEventListener('click', event => {
			// Prevent any default behavior on child link clicks
			event.preventDefault();
			event.stopPropagation();

			// Trigger the download for all links inside the card
			const links = card.querySelectorAll('.download-trigger');
			links.forEach(link => {
				const a = document.createElement('a');
				a.href = link.href;
				a.download = link.download || '';
				a.click();
			});
		});
	});
</script>




<!--<script>-->
<!--	// Add this script to make clicks trigger downloads-->
<!--	document.querySelectorAll('.project-card').forEach(card => {-->
<!--		card.addEventListener('click', () => {-->
<!--			card.querySelectorAll('.download-trigger').forEach(link => link.click());-->
<!--		});-->
<!--	});-->
<!--</script>-->











<!-- -&#45;&#45;-->
<!--interface Props {-->
<!--	title: string;-->
<!--	description: string;-->
<!--	image: string;-->
<!--	tags: string[];-->
<!--	href: string[];  // Changed from string to string[] to handle multiple files-->
<!--}-->

<!--const { title, description, image, tags, href } = Astro.props;-->
<!-- -&#45;&#45;-->

<!--<div class="project-card" onclick="downloadAll(event, this)">-->
<!--	<div class="card-content">-->
<!--		<img src={image} alt={title} class="project-image" />-->
<!--		<h3>{title}</h3>-->
<!--		<p>{description}</p>-->
<!--		<div class="tags">-->
<!--			{tags.map(tag => <span class="tag">{tag}</span>)}-->
<!--		</div>-->
<!--	</div>-->
<!--	{href.map(path => (-->
<!--		<a href={path} download style="display: none;"></a>-->
<!--	))}-->
<!--</div>-->

<!--<script>-->
<!--	function downloadAll(event, element) {-->
<!--		event.preventDefault();-->
<!--		element.querySelectorAll('a[download]').forEach(link => link.click());-->
<!--	}-->
<!--</script>-->





<!-- -&#45;&#45;-->
<!--interface Props {-->
<!--	title: string;-->
<!--	description: string;-->
<!--	image: string;-->
<!--	tags: string[];-->
<!--	href: string;-->
<!--}-->

<!--const { title, description, image, tags, href } = Astro.props;-->
<!-- -&#45;&#45;-->

<!--<a href={href} class="project-card" download="{download}">-->
<!--	<div class="card-content">-->
<!--		<img src={image} alt={title} class="project-image" />-->
<!--		<h3>{title}</h3>-->
<!--		<p>{description}</p>-->
<!--		<div class="tags">-->
<!--			{tags.map(tag => <span class="tag">{tag}</span>)}-->
<!--		</div>-->
<!--	</div>-->
<!--</a>-->



<style>
	.project-card {
		display: block;
		background: #1a1d24;
		border-radius: 8px;
		overflow: hidden;
		transition: transform 0.2s;
		text-decoration: none;
		color: inherit;
	}



	.project-card:hover {
		transform: translateY(-4px);
	}

	.card-content {
		padding: 1.5rem;
	}

	.project-image {
		width: 100%;
		height: 200px;
		object-fit: cover;
		border-radius: 4px;
	}

	h3 {
		margin: 1rem 0;
		font-size: 1.5rem;
		color: var(--text);
	}

	p {
		color: #a1a1aa;
		margin-bottom: 1rem;
	}

	.tags {
		display: flex;
		flex-wrap: wrap;
		gap: 0.5rem;
	}

	.tag {
		background: var(--accent);
		color: white;
		padding: 0.25rem 0.75rem;
		border-radius: 999px;
		font-size: 0.875rem;
	}
</style>